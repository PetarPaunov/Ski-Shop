@using SkiShop.Core.Models.ProductViewModels

@model ProductPagingViewModel

<form method="get">
	<div class="row col justify-content-center">
		<div class="form-group col-md-3 d-flex justify-content-between">
			<div class="form-group">
				<label asp-for="Type">Product Type</label>
				<select asp-for="Type" class="form-control">
					<option value="">All</option>
					@foreach (var type in ViewBag.Types)
					{
						<option value="@type.Name">@type.Name</option>
					}
				</select>
			</div>
		</div>

		<div class="form-group col-md-3">
			<label asp-for="SearchTerm">Search Term</label>
			<input asp-for="SearchTerm" class="form-control" placeholder="...">
		</div>

		<div class="col-md-3">
			<div class="form-group mt-4">
				<input type="submit" value="Search" class="btn btn-dark btn-outline-dark text-white" />
			</div>
		</div>
	</div>
</form>

<partial name="_ProductsPartial" model="@Model.Products" />

@if (!Model.Products.Any())
{
	<h2 class="text-center">No products found by the given criteria!</h2>
}

@{
	var maxPage = Math.Ceiling((double)Model.TotalProductsCount /
		Model.ProductsPerPage);
}

<nav aria-label="Page navigation example">
	<ul class="pagination justify-content-center">
		@for (int i = 1; i <= maxPage; i++)
		{
			@if (i != Model.CurrentPage)
			{
				<li class="page-item"><a class="page-link text-black" asp-action="Index" asp-controller="Product"
					asp-route-currentPage="@i"
					asp-route-type="@Model.Type"
					asp-route-searchTerm="@Model.SearchTerm">@i</a></li>
			}
			else
			{
				<li class="page-item"><a class="page-link text-black" asp-action="Index" asp-controller="Product"
					asp-route-currentPage="@i"
					asp-route-type="@Model.Type"
					asp-route-searchTerm="@Model.SearchTerm">@i</a>
				</li>
			}
		}
	</ul>
</nav>